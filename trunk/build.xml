<?xml version="1.0" encoding="UTF-8"?>
<project name="Limegreen" default="templates" basedir=".">
	<property name="props" value="build.properties"/>
	<property file="${props}"/>
	<property name="secret" value="secret.properties"/>
	<property name="secret.example" value="secret.example.properties"/>
	<property name="secret.temp" value="secret.temp.properties"/>
	<!-- Preexisitng Directories -->
	<property name="tools" location="tools"/>
		<property name="antlib" location="${tools}/antlib"/>
		<property name="github" location="${tools}/github"/>
	<property name="src" location="src"/>
		<property name="template" location="${src}/template"/>
		<property name="templatesrc" location="${template}/src"/>
		<property name="templatetools" location="${template}/tools"/>
		<property name="onejar" location="${templatetools}/onejar"/>
		<property name="autoupdate" location="${templatetools}/autoupdate"/>
		<property name="eclipse" location="${src}/eclipse"/>
		<property name="eclipseplugin" location="${eclipse}/plugin"/>
		<property name="xcode" location="${src}/xcode"/>
	<property name="build" location="build"/>
		<property name="antbuild" location="${build}/ant"/>
			<property name="anttemplate" location="${antbuild}/Template"/>
		<property name="eclipsebuild" location="${build}/eclipse"/>
			<property name="eclipsebuildplugin" location="${eclipsebuild}/plugin"/>
		<property name="xcodebuild" location="${build}/xcode"/>
			<property name="xcodetemplate" value="Limegreen Java Swing Application"/>
			<property name="xcodeproject" location="${xcodebuild}/${xcodetemplate}"/>
	<property name="localprojects" location="/Library/Application Support/Apple/Developer Tools/Project Templates/Java"/>
			<property name="localtemplate" location="${localprojects}/${xcodetemplate}"/>
	
	<available file="${secret}" property="secret.present"/>
	<condition property="copy.do">
		<isfalse value="${secret.present}"/>
	</condition>
	<condition property="copy.dont">
		<istrue value="${secret.present}"/>
	</condition>

	<condition property="version.do">
		<istrue value="${build.doversion}"/>
	</condition>
	<condition property="version.default">
		<isfalse value="${build.doversion}"/>
	</condition>

	<fileset id="antlib.jars" dir="${antlib}">
		<include name="**/*.jar"/>
	</fileset>
	<path id="antlib.id">
		<fileset refid="antlib.jars"/>
	</path>
	<pathconvert property="antlib.classpath" pathsep=";">
		<path refid="antlib.id"/>
	</pathconvert>
	<!-- <taskdef classname="org.apache.tools.ant.taskdefs.optional.ssh.Scp" classpath="${antlib.classpath}" name="scp"/> -->
	<taskdef classname="com.jameslow.Substring" classpath="${antlib}" name="substring"/>

	<fileset id="github-anttasks.jars" dir="${github}/lib">
		<include name="**/*.jar"/>
	</fileset>
	<path id="github-anttasks.classpath">
		<fileset refid="github-anttasks.jars"/>
		<pathelement location="."/>
		<fileset dir="${github}">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	<taskdef name="github.createrelease" classname="com.github.api.CreateRelease" classpathref="github-anttasks.classpath" loaderref="github-anttasks.classpath.loader" />
	<taskdef name="github.uploadasset" classname="com.github.api.UploadAsset" classpathref="github-anttasks.classpath" loaderref="github-anttasks.classpath.loader" />
	<taskdef name="github.fullrelease" classname="com.github.api.FullRelease" classpathref="github-anttasks.classpath" loaderref="github-anttasks.classpath.loader" />

	<target name="secret.copy" description="Copy secret file if it doesn't exist" if="copy.do">
		<copy file="${secret.example}" tofile="${secret}" overwrite="false"/>
	</target>
	<target name="secret" depends="secret.copy" description="Source the secret file">
		<property file="${secret}"/>
	</target>

	<target name="compile.onejar" description="Compile onejar">
		<javac srcdir="${onejar}" destdir="${onejar}"
			source="1.4" target="1.4"
			failonerror="true"
			includes="**/*.java">
		</javac>
	</target>
	
	<target name="compile.autoupdate" description="Compile autoupdate">
		<copy todir="${autoupdate}">
			<fileset dir="${templatesrc}">
				<include name="**/XMLHelper.java"/>
				<include name="**/SimpleNodeList.java"/>
			</fileset>
		</copy>
		<javac srcdir="${autoupdate}" destdir="${autoupdate}"
			source="1.4" target="1.4"
			failonerror="true"
			includes="**/*.java">
		</javac>
	</target>
	
	<target name="compile.utils" description="Compile additional ant utils">
		<javac srcdir="${antlib}" destdir="${antlib}"
			source="1.4" target="1.4"
			failonerror="true"
			includes="**/*.java">
		</javac>
	</target>
	
	<target name="build" depends="secret" description="Increment build number and date">
		<propertyfile file="${props}">
			<entry key="build.date" type="date" value="now"/>
		</propertyfile>
		<buildnumber file="${props}"/>
	</target>
	
	<target name="ant" description="Create Ant Template" depends="build">
		<copy todir="${anttemplate}">
			<fileset dir="${template}">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
				<exclude name="build.properties"/>
				<exclude name="build.xml"/>
				<exclude name="src/Template.java"/>
			</fileset>
		</copy>
		<copy todir="${anttemplate}">
			<fileset dir="${template}">
				<include name="build.properties"/>
				<include name="build.xml"/>
				<include name="src/Template.java"/>
			</fileset>
			<filterset>
				<filter token="ProjectName" value="Template"/>
			</filterset>
		</copy>
		<copy todir="${anttemplate}/tools">
			<fileset dir="${tools}">
				<exclude name="**/.svn/**"/>
			</fileset>
		</copy>
	</target>
	
	<target name="eclipse" description="Create Eclipse Plugin" depends="ant,version.default">
		<!-- TODO: update version in plugin build.properties from entered version -->
		<propertyfile file="${eclipse}/build.properties">
			<entry key="build.version" value="${new.version}"/>
		</propertyfile>
		<ant antfile="${eclipse}/build.xml" dir="${eclipse}" inheritAll="false" target="site" />
		<!-- TODO: copy to update site folder/auto commit -->
	</target>

	<target name="xcode" description="Create Xcode Project" depends="build">
		<copy todir="${xcodeproject}">
			<fileset dir="${template}">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
				<exclude name="build.properties"/>
				<exclude name="build.xml"/>
				<exclude name="src/Template.java"/>
			</fileset>
		</copy>
		<copy todir="${xcodeproject}">
			<fileset dir="${template}">
				<include name="build.properties"/>
				<include name="build.xml"/>
				<include name="src/Template.java"/>
			</fileset>
			<filterset>
				<filter token="ProjectName" value="«PROJECTNAMEASIDENTIFIER»"/>
			</filterset>
		</copy>
		<copy todir="${xcodeproject}">
			<fileset dir="${xcode}">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
			</fileset>
		</copy>
		<copy todir="${xcodeproject}/tools/github">
			<!-- I'm not sure why I had this explicit in the old version, which would leave ant antlib, but there should be no harm in including it -->
			<!--<fileset dir="${github}">
				<exclude name="**/.svn/**"/>
			</fileset>-->
			<fileset dir="${tools}">
				<exclude name="**/.svn/**"/>
			</fileset>
		</copy>
	</target>

	<target name="templates" description="Create All" depends="ant,eclipse,xcode">
		<!-- At the moment templates requires nothing else -->
	</target>

	<target name="version.input" if="version.do">
		<input
			message="Please input a new version. Current version ${build.version}"
			addproperty="new.version"
		/>
		<propertyfile file="${props}">
			<entry key="build.version" value="${new.version}"/>
		</propertyfile>
		<condition property="version.default">
			<equals arg1="${new.doversion}" arg2=""/>
		</condition>
	</target>
	<target name="version.default">
		<property name="new.version" value="${build.version}"/>
	</target>
	<target name="version" depends="version.input,version.default" description="Prompt user to enter new version">
		<!-- At the moment version requires nothing else -->
	</target>

	<target name="release" depends="version,templates" description="Create a new release of plugins">
		<property name="ant.zip" value="limegreen-ant-${new.version}.zip"/>
		<property name="ant.zip.full" location="${build}/${ant.zip}"/>
		<zip destfile="${ant.zip.full}">
			<fileset dir="${antbuild}">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
			</fileset>
		</zip>
		<property name="xcode.zip" value="limegreen-xcode-${new.version}.zip"/>
		<property name="xcode.zip.full" location="${build}/${xcode.zip}"/>
		<zip destfile="${xcode.zip.full}">
			<fileset dir="${xcodebuild}">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
			</fileset>
		</zip>
		<property name="source.zip" value="limegreen-source-${new.version}.zip"/>
		<property name="source.zip.full" location="${build}/${source.zip}"/>
		<move file="${secret}" tofile="${secret.temp}"/>
		<copy file="${secret.example}" tofile="${secret}"/>
		<zip destfile="${source.zip.full}">
			<fileset dir=".">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
				<exclude name="**/build/**"/>
				<exclude name="${secret.temp}"/>
			</fileset>
		</zip>
		<delete file="${secret}"/>
		<move file="${secret.temp}" tofile="${secret}"/>
	</target>

	<target name="github" description="Deploy All To GitHub" depends="release">
		<github.fullrelease
			repouser="${github.repouser}"
			repo="${github.repo}"
			tokenuser="${github.tokenuser}"
			token="${github.token}"
			tag="${new.version}">
			<fileset dir="${build}" casesensitive="yes">
				<include name="${xcode.zip}"/>
				<include name="${ant.zip}"/>
			</fileset>
		</github.fullrelease>
	</target>

	<target name="deploy" description="Deploy to GitHub" depends="github">
		<!-- At the moment deploy requires nothing else -->
	</target>

	<target name="xcode.delete"  description="Delete Local Xcode Template">
		<delete dir="${localtemplate}"/>
	</target>
	<target name="xcode.deploy"  description="Deploy Xcode Template Locally" depends="xcode.delete,xcode">
		<copy todir="${localtemplate}">
			<fileset dir="${xcodeproject}"/>
		</copy>
	</target>

	<target name="clean" description="Remove build and dist directories">
		<delete dir="${build}"/>
	</target>
</project>