<?xml version="1.0" encoding="UTF-8"?>
<project name="Limegreen" default="alltemplates" basedir=".">
	<property name="props" value="build.properties"/>
	<property file="${props}"/>
	<property name="secret" value="secret.properties"/>
	<property file="${secret}"/>
	<!-- Preexisitng Directories -->
	<property name="tools" location="tools"/>
		<property name="antlib" location="${tools}/antlib"/>
		<property name="google" location="${tools}/google"/>
		<property name="sourceforge" location="${tools}/sourceforge"/>
		<property name="sflib" location="${sourceforge}/lib"/>
	<property name="src" location="src"/>
		<property name="template" location="${src}/template"/>
		<property name="templatesrc" location="${template}/src"/>
		<property name="templatetools" location="${template}/tools"/>
		<property name="onejar" location="${templatetools}/onejar"/>
		<property name="autoupdate" location="${templatetools}/autoupdate"/>
		<property name="eclipse" location="${src}/eclipse"/>
		<property name="eclipseplugin" location="${eclipse}/Plugin"/>
		<property name="xcode" location="${src}/xcode"/>
	<property name="build" location="build"/>
		<property name="antbuild" location="${build}/ant"/>
			<property name="anttemplate" location="${antbuild}/Template"/>
		<property name="eclipsebuild" location="${build}/eclipse"/>
		<property name="xcodebuild" location="${build}/xcode"/>
			<property name="xcodetemplate" value="Limegreen Java Swing Application"/>
			<property name="xcodeproject" location="${xcodebuild}/${xcodetemplate}"/>
	<property name="localprojects" location="/Library/Application Support/Apple/Developer Tools/Project Templates/Java"/>
			<property name="localtemplate" location="${localprojects}/${xcodetemplate}"/>

	<condition property="version.do">
		<istrue value="${build.doversion}"/>
	</condition>
	<condition property="version.default">
		<isfalse value="${build.doversion}"/>
	</condition>

	<condition property="google.classpath"
		value="${google};${google}/ant-googlecode-0.0.1.jar"
		else="${google}/ant-googlecode-0.0.1.jar">
		<not>
			<available classname="org.apache.tools.ant.util.Base64Converter"/>
		</not>
	</condition>
	<echo message="Google classpath set to ${google.classpath}"/>
	<taskdef classname="net.bluecow.googlecode.ant.GoogleCodeUploadTask" classpath="${google.classpath}" name="gcupload"/>

	<fileset id="antlib.jars" dir="${antlib}">
		<include name="**/*.jar"/>
	</fileset>
	<path id="antlib.id">
		<fileset refid="antlib.jars"/>
	</path>
	<pathconvert property="antlib.classpath" pathsep=";">
		<path refid="antlib.id"/>
	</pathconvert>
	<taskdef classname="org.apache.tools.ant.taskdefs.optional.ssh.Scp" classpath="${antlib.classpath}" name="scp"/>
	<taskdef classname="com.jameslow.Substring" classpath="${antlib}" name="substring"/>

	<fileset id="sourceforge.jars" dir="${sflib}">
		<include name="**/*.jar"/>
	</fileset>
	<path id="sourceforge.id">
		<fileset refid="sourceforge.jars"/>
		<pathelement path="${sourceforge}/sfutils-1.01RC1.jar"/>
	</path>
	<pathconvert property="sourceforge.classpath" pathsep=";">
		<path refid="sourceforge.id"/>
	</pathconvert>
	<echo message="Sourceforge classpath set to ${sourceforge.classpath}"/>
	<taskdef name="sfpublish" classname="org.apache.tools.ant.taskdefs.optional.sourceforge.SourceForgePublish" classpath="${sourceforge.classpath}"/>

	<target name="compile.onejar" description="Compile onejar">
		<javac srcdir="${onejar}" destdir="${onejar}"
			source="1.4" target="1.4"
			failonerror="true"
			includes="**/*.java">
		</javac>
	</target>
	
	<target name="compile.autoupdate" description="Compile autoupdate">
		<copy todir="${autoupdate}">
			<fileset dir="${templatesrc}">
				<include name="**/XMLHelper.java"/>
				<include name="**/SimpleNodeList.java"/>
			</fileset>
		</copy>
		<javac srcdir="${autoupdate}" destdir="${autoupdate}"
			source="1.4" target="1.4"
			failonerror="true"
			includes="**/*.java">
		</javac>
	</target>

	<target name="compile.base64" description="Compile Base64 for versions of ant below 1.7">
		<javac srcdir="${google}" destdir="${google}"
			source="1.4" target="1.4"
			failonerror="true"
			includes="**/*.java">
		</javac>
	</target>
	
	<target name="compile.utils" description="Compile additional ant utils">
		<javac srcdir="${antlib}" destdir="${antlib}"
			source="1.4" target="1.4"
			failonerror="true"
			includes="**/*.java">
		</javac>
	</target>
	
	<target name="build" description="Increment build number and date">
		<propertyfile file="${props}">
			<entry key="build.date" type="date" value="now"/>
		</propertyfile>
		<buildnumber file="${props}"/>
	</target>
	
	<target name="ant" description="Create Ant Template" depends="build">
		<copy todir="${anttemplate}">
			<fileset dir="${template}">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
			</fileset>
			<filterset>
				<filter token="ProjectName" value="Template"/>
			</filterset>
		</copy>
		<copy todir="${anttemplate}/tools">
			<fileset dir="${tools}">
				<exclude name="**/.svn/**"/>
			</fileset>
		</copy>
	</target>
	
	<target name="eclipse" description="Create Eclipse Plugin" depends="build">

	</target>

	<target name="xcode" description="Create Xcode Project" depends="build">
		<copy todir="${xcodeproject}">
			<fileset dir="${template}">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
			</fileset>
			<filterset>
				<filter token="ProjectName" value="«PROJECTNAMEASIDENTIFIER»"/>
			</filterset>
		</copy>
		<copy todir="${xcodeproject}">
			<fileset dir="${xcode}">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
			</fileset>
		</copy>
		<copy todir="${xcodeproject}/tools/google">
			<fileset dir="${google}">
				<exclude name="**/.svn/**"/>
			</fileset>
		</copy>
		<copy todir="${xcodeproject}/tools/sourceforge">
			<fileset dir="${sourceforge}">
				<exclude name="**/.svn/**"/>
			</fileset>
		</copy>
	</target>

	<target name="alltemplates" description="Create All" depends="ant,eclipse,xcode">
		<!-- At the moment alltemplates requires nothing else -->
	</target>

	<target name="version.input" depends="alltemplates" if="version.do">
		<input
			message="Please input a new version. Current version ${build.version}"
			addproperty="new.version"
		/>
		<propertyfile file="${props}">
			<entry key="build.version" value="${new.version}"/>
		</propertyfile>
		<condition property="version.default">
			<equals arg1="${new.doversion}" arg2=""/>
		</condition>
	</target>
	<target name="version.default" depends="version.input">
		<property name="new.version" value="${build.version}"/>
	</target>
	<target name="version" depends="version.input,version.default" description="Prompt user to enter new version">
		<!-- At the moment version requires nothing else -->
	</target>

	<target name="release" depends="version" description="Create a new release of plugins">
		<property name="ant.zip" value="limegreen-ant-${new.version}.zip"/>
		<property name="ant.zip.full" location="${build}/${ant.zip}"/>
		<zip destfile="${ant.zip.full}">
			<fileset dir="${antbuild}">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
			</fileset>
		</zip>
		<property name="xcode.zip" value="limegreen-xcode-${new.version}.zip"/>
		<property name="xcode.zip.full" location="${build}/${xcode.zip}"/>
		<zip destfile="${xcode.zip.full}">
			<fileset dir="${xcodebuild}">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
			</fileset>
		</zip>
		<property name="source.zip" value="limegreen-source-${new.version}.zip"/>
		<property name="source.zip.full" location="${build}/${source.zip}"/>
		<move file="secret.properties" tofile="secret.temp.properties"/>
		<copy file="secret.example.properties" tofile="secret.properties"/>
		<zip destfile="${source.zip.full}">
			<fileset dir=".">
				<include name="**"/>
				<exclude name="**/.svn/**"/>
				<exclude name="**/build/**"/>
				<exclude name="secret.temp.properties"/>
			</fileset>
		</zip>
		<delete file="secret.properties"/>
		<move file="secret.temp.properties" tofile="secret.properties"/>
	</target>

	<target name="sourceforge" description="Deploy All To Sourceforge" depends="release">
		<tstamp>
			<format property="sourceforge.date" pattern="d/M/yyyy"/>
		</tstamp>
		<sfpublish
			releasename="${new.version}"
			packagename="${sourceforge.project}"
			packagehidden="no"
			hidden="no"
			projectshortname="${sourceforge.project}"
			projectname="Limegreen"
			username="${sourceforge.username}"
			password="${sourceforge.password}"
			releasedate="${sourceforge.date}">
			<filespec
				file="${source.zip.full}"
				filetype="source_zip"
				processortype="platform_independent"/>
			<filespec
				file="${xcode.zip.full}"
				filetype="source_zip"
				processortype="platform_independent"/>
			<filespec
				file="${ant.zip.full}"
				filetype="source_zip"
				processortype="platform_independent"/>
		</sfpublish>
<!--	This doesn't work right now because it can't create the directories first
		<substring startindex="0" endindex="1" string="${sourceforge.project}" property="oneletter"/>
		<substring startindex="0" endindex="2" string="${sourceforge.project}" property="twoletters"/>
		<scp file="${source.zip.full}" todir="${sourceforge.username},${sourceforge.project}@frs.sourceforge.net:/home/frs/project/${oneletter}/${twoletters}/${sourceforge.project}/${sourceforge.project}/${new.version}/${source.zip}" trust="yes" verbose="true" password="${sourceforge.password}" />
		<scp file="${xcode.zip.full}" todir="${sourceforge.username},${sourceforge.project}@frs.sourceforge.net:/home/frs/project/${oneletter}/${twoletters}/${sourceforge.project}/${sourceforge.project}/${new.version}/${xcode.zip}" trust="yes" verbose="true" password="${sourceforge.password}" />
		<scp file="${ant.zip.full}" todir="${sourceforge.username},${sourceforge.project}@frs.sourceforge.net:/home/frs/project/${oneletter}/${twoletters}/${sourceforge.project}/${sourceforge.project}/${new.version}/${ant.zip}" trust="yes" verbose="true" password="${sourceforge.password}" />
-->
	</target>

	<target name="google" description="Deploy All To GoogleCode" depends="release">
		<gcupload
			username="${google.username}"
			password="${google.password}"
			projectname="${google.project}"
			filename="${source.zip.full}"
			targetfilename="${source.zip}"
			summary="Limegreen Raw Source Code"
			labels="OpSys-OSX, Type-Source, Limegreen, Source"/>
		<gcupload
			username="${google.username}"
			password="${google.password}"
			projectname="${google.project}"
			filename="${xcode.zip.full}"
			targetfilename="${xcode.zip}"
			summary="Limegreen Xcode Project Template"
			labels="Featured, OpSys-OSX, Type-Source, Limegreen, XCode"/>
		<gcupload
			username="${google.username}"
			password="${google.password}"
			projectname="${google.project}"
			filename="${ant.zip.full}"
			targetfilename="${ant.zip}"
			summary="Limegreen Ant Project Template"
			labels="Featured, OpSys-All, Type-Source, Limegreen, Ant"/>
	</target>
	
	<target name="deploy" description="Deploy All To GoogleCode And Sourceforge" depends="sourceforge,google">
		<!-- At the moment deploy requires nothing else -->
	</target>

	<target name="xcode.delete"  description="Delete Local Xcode Template">
		<delete dir="${localtemplate}"/>
	</target>
	<target name="xcode.deploy"  description="Deploy Xcode Template Locally" depends="xcode.delete,xcode">
		<copy todir="${localtemplate}">
			<fileset dir="${xcodeproject}"/>
		</copy>
	</target>

	<target name="clean" description="Remove build and dist directories">
		<delete dir="${build}"/>
	</target>
</project>